<h4>Binary Search Tree</h4>
<p>is a binary tree with sorted elements. <code>bst($l,$r,R)</code> represents a binary search tree in which all the elements are in \([$l,$r]\).</p>
<h5>Production rules (indexed)</h5>
<pre>
bst1@@ R = bst($l,$r) :- R = leaf.
bst2@@ R = bst($l,$r) :- $l =< $x, $x <= $r |
       R = node($x,bst($l,$x),bst($x,$r)).
</pre>
<h5>Example: well-typed graphs</h5>
<pre>
node(3,node(1,leaf,leaf),node(4,leaf,leaf),R) : bst($l,$r,R) where $l =< 1, $r >= 4
</pre>
<h5>Example: well-typed rule</h5>
<pre>
R=node($n2,node($n1,X,Y),Z) :- R=node($n1,X,node($n2,Y,Z))
</pre>
because both sides are typed <code>bst($l,$r,R) - bst($l,$n1,X),bst($n1,$n2,Y),bst($n2,$r,Z) where $l =< $n1 =< $n2 =< $r</code>.
